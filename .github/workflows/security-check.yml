name: Security Analysis Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-check:
    name: SBOM + Vulnerability Scan + Scorecard
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üß± Set up environment
        run: |
          sudo apt update
          sudo apt install -y curl jq

      - name: üìÜ Install Syft (SBOM)
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: üìÑ Generate SBOM (CycloneDX)
        run: |
          syft dir:. -o cyclonedx-json > sbom.json

      - name: üîê Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: üö® Run Grype Scan (dir)
        run: |
          grype dir:. -o json > grype-results.json || true

      - name: üìä Run OpenSSF Scorecard
        uses: ossf/scorecard-action@v2.1.2
        with:
          results_file: scorecard-results.json
          results_format: json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: üìù Generate Plain Text Report
        run: |
          echo "üìÜ Sicherheitsbericht ‚Äì GitHub Repo" > security-report.txt
          echo -e "\n== Abh√§ngigkeiten (SBOM) ==" >> security-report.txt
          jq -r '.components[] | "- \(.name): \(.version) (\(.type))"' sbom.json >> security-report.txt

          echo -e "\n== Gefundene Schwachstellen (Grype) ==" >> security-report.txt
          if [ -s grype-results.json ]; then
            jq -r '.matches[] | "- \(.vulnerability.id) in \(.artifact.name)@\(.artifact.version) [\(.vulnerability.severity)]"' grype-results.json >> security-report.txt
          else
            echo "Keine Schwachstellen oder Fehler beim Scan" >> security-report.txt
          fi

          echo -e "\n== Scorecard ==" >> security-report.txt
          SCORE=$(jq '.scorecard.score' scorecard-results.json)
          echo "- Score: ${SCORE} / 10" >> security-report.txt
          jq -r '.scorecard.checks[] | "- \(.name): \(.score) ‚Äì \(.reason)"' scorecard-results.json >> security-report.txt

      - name: ‚òÅÔ∏è Upload Ergebnisse
        uses: actions/upload-artifact@v4
        with:
          name: security-analysis-report
          path: |
            sbom.json
            grype-results.json
            scorecard-results.json
            security-report.txt
